linetype = "dashed", size = 0.5),
panel.background = element_rect(fill = "aliceblue"))
?ggsave
ggsave(filename = "Mapa3Enseadas.tiff", width = 9, height = 8)
ggsave(filename = "Mapa3Enseadas.tiff", width = 9, height = 7)
ggsave(filename = "Mapa3Enseadas.tiff", width = 9, height = 6)
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = 0.5),
panel.background = element_rect(fill = "aliceblue"))
library(ggalt)
Bays<- c('Ubatuba Bay', 'Ubatumirim Bay', 'Mar Virado Bay')
lat <-c(-23.45, -23.35, -23.54)
lon <-c(-45.05,-44.9,-45.22)
points<- data.frame(Bays,lat,lon)
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = 0.5),
panel.background = element_rect(fill = "aliceblue"))
Bays<- c('Ubatuba Bay', 'Ubatumirim Bay', 'Mar Virado Bay')
lat <-c(-23.43, -23.35, -23.55)
lon <-c(-45.05,-44.9,-45.2)
points<- data.frame(Bays,lat,lon)
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = 0.5),
panel.background = element_rect(fill = "aliceblue"))
lat <-c(-23.44, -23.35, -23.55)
points<- data.frame(Bays,lat,lon)
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = 0.5),
panel.background = element_rect(fill = "aliceblue"))
lon <-c(-45.05,-44.9,-45.2)
ggsave(filename = "Mapa3Enseadas.tiff", width = 9, height = 6)
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(5),
linetype = "dashed", size = 0.5),
panel.background = element_rect(fill = "aliceblue"))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = 5),
panel.background = element_rect(fill = "aliceblue"))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"))
??theme()
?theme()
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.boarder = element_rect(fill = gray(.5)))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.border = element_rect(fill = gray(.5)))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.border = element_rect(col = gray(.5)))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.grid = element_rect(col = gray(.5)))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.grid = element_rect(fill= gray(.5)))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.grid = element_line(fill= gray(.5)))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.grid = element_line(col= gray(.5)))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.grid = element_line(color= gray(.5)))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.border = element_line(color= gray(.5)))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.border = element_rect(color= gray(.5)))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.border = element_rect(color= gray(.5)))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.border = element_rect(color= gray(.5)), alpha =0)
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue")) + theme_bw
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue")) + theme_bw()
?theme_bw
?theme()
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.border = element_rect(color = gray, fill= NULL)) + theme_bw()
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.border = element_rect(color = gray)) + theme_bw()
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(color = gray,fill = "aliceblue")) + theme_bw()
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(color = gray,fill = "aliceblue"))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(color = gray,fill = "aliceblue")))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.border = element_rect(color = gray()))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.border = element_rect(color = gray(.5)))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.border = element_rect(color = gray(.5, alpha = 0)))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue")))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue", col = gray(.5)))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid = element_line(color = gray(.5), panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue")))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid = element_line(color = gray(.5)), panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue")))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid = element_line(color = gray(.5)), panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"))))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid = element_line(color = gray(.5)), panel.grid.major = element_line(color = gray(.5)),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"))))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid = element_line(color = gray(.5)), panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"))
?theme_bw
panel.background = element_rect(fill = "aliceblue"), panel.border = element_rect(linetype = "dashed", fill = NA)
panel.background = element_rect(fill = "aliceblue"), panel.border = element_rect(linetype = "dashed")
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid = element_line(color = gray(.5)), panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue")), panel.border = element_rect(linetype = "dashed")
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid = element_line(color = gray(.5)), panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue")), panel.border = element_rect(linetype = "dashed"))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid = element_line(color = gray(.5)), panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.border = element_rect(linetype = "dashed"))
g3 + geom_point(aes(x=points$lon, y=points$lat),
data = points,
alpha = 0.7,
size = 15,
color = "tomato") + theme(panel.grid = element_line(color = gray(.5)), panel.grid.major = element_line(color = gray(.5),
linetype = "dashed", size = .5),
panel.background = element_rect(fill = "aliceblue"), panel.border = element_rect(linetype = "dashed", fill = NA))
ggsave(filename = "Mapa3Enseadas.tiff", width = 9, height = 6)
kapow()
require(SIBER)
kapow()
citation("SIBER")
update.packages("SIBER")
library("SIBER", lib.loc="~/R/win-library/3.5")
install.packages(c("bayesm", "bipartite", "callr", "car", "classInt", "clipr", "coda", "cowplot", "curl", "data.table", "deldir", "digest", "dplyr", "DT", "ellipsis", "emmeans", "energy", "fields", "fpc", "ggplot2", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "jpeg", "knitr", "ks", "later", "lpSolve", "maptools", "markdown", "mclust", "MVN", "mvtnorm", "openssl", "openxlsx", "pillar", "pkgconfig", "pls", "processx", "proj4", "promises", "purrr", "quantreg", "raster", "Rcpp", "RcppArmadillo", "rgdal", "rgeos", "RgoogleMaps", "rjags", "rlang", "rmarkdown", "rosm", "RWeka", "RWekajars", "sf", "shiny", "slam", "spam", "spatstat", "spData", "spdep", "statnet.common", "sys", "testthat", "tibble", "tidyr", "tinytex", "TTR", "units", "varhandle", "vegan", "xfun", "xml2", "zCompositions", "zip"))
exit
dev.off()
exit
#Permanova + Post_hoc
library(vegan)
library(ggplot2)
hdata<- read.csv("enseadas.csv",head=T, sep=";")
hermit<- hdata[5:12]
# install.packages("devtools")
devtools::install_github("stanford-datalab/dcl")
install.packages("devtools")
devtools::install_github("stanford-datalab/dcl")
install.package("smatr")
install.packages("smatr")
require(smatr)
iris
x1 <- sma(iris$Sepal.Length, level = 0.80, h=12, intervals="parametric")
?sma()
x1 <- sma(iris$Sepal.Length ~ iris$Petal.Length*iris$Species)
plot(x1)
x1 <- sma(iris$Sepal.Length ~ iris$Petal.Length*iris$Species, slope.test=1)
plot(x1)
x1
summary(x1)
View(x1)
x1$coef$setosa
x1$coef$setosa$`coef(SMA)`
x1 <- sma(iris$Sepal.Length ~ iris$Petal.Length*iris$Species)
require(smatr)
iris
x1 <- sma(iris$Sepal.Length ~ iris$Petal.Length*iris$Species)
plot(x1)
iris
install.packages("deSolve")
install.packages("IpSolve")
install.packages("ipSolve")
install.packages("lpSolve")
lion<- rep(5:1)
lion<- as.data.frame(1,1,1,1,1,1,1,15,15,15,15,25,25,25)
View(lion)
lion<- data.frame(1,1,1,1,1,1,1,15,15,15,15,25,25,25)
View(lion)
lion<- c(1,1,1,1,1,1,1,15,15,15,15,25,25,25)
hist(lion)
lion<- c(1,1,1,1,1,1,1,15,15,15,15,25,25,25,10:15,15:20)
hist(lion)
lion<- c(rep(1,100),1,1,1,1,1,1,15,15,15,15,25,25,25,10:15,15:20)
hist(lion)
hist(lion, main = "Saudades")
hist(lion, main = "Saudades de leão")
hist(lion, main = "Saudades de leão", breaks = 100)
hist(lion, main = "Saudades de leão", breaks = 30)
lion<- c(rep(1,100),2:31)
hist(lion, main = "Saudades de leão", breaks = 30)
hist(lion, main = "Saudades de leão", breaks = 30)+xlab("Dias")
hist(lion, main = "Saudades de leão", breaks = 30)+labs(x = "Dias")
hist(lion, main = "Saudades de leão", breaks = 30)+lab(x = "Dias")
hist(lion, main = "Saudades de leão", breaks = 30)+label(x = "Dias")
bicho<- data.frame("Malvada","boazinha",90,10)
View(bicho)
require(tidyverse)
diversity<- tibble(sp1 = 1:5, sp2 = 2:6)
View(diversity)
diversity<- tibble(sp1 = 1:5, sp2 = 2:6, season = rep(2, "winter"))
rep(2, "winter")
?rep()
??rep()
?rep()
diversity<- tibble(sp1 = 1:5, sp2 = 2:6, season = rep("winter","fall", each = 2)
diversity<- tibble(sp1 = 1:5, sp2 = 2:6, season = rep("winter","fall", each = 2))
rep("winter","fall", each = 2))
diversity<- tibble(sp1 = 1:5, sp2 = 2:6, season = rep("winter", each = 2))
diversity<- tibble(sp1 = 1:5, sp2 = 2:6, season = rep(c("winter", "summer"), c(2,3))
diversity<- tibble(sp1 = 1:5, sp2 = 2:6, season = rep(c("winter", "summer"), c(2,3)))
View(diversity)
?posthoc.kruskall.dunn.test
??
??posthoc.kruskall.dunn.test''
??posthoc.kruskall.dunn.test
require(PMCMR)
install.packages("PMCMR")
??posthoc.kruskall.dunn.test
?posthoc.kruskall.dunn.test()
require(PMCMR)
?posthoc.kruskall.dunn.test()
require(tidyverse)
doses<- c(0,5,7,7,6,7)
tempo<- c(0,1,2,3,4,5)
ggplot(aes(x = tempo, y = doses)) + geom_hist()
df<- data.frame(doses = doses, tempo = tempo)
ggplot(df, aes(x = tempo, y = doses)) + geom_hist()
ggplot(df, aes(x = tempo, y = doses)) + geom_histogram()
ggplot(df, aes(x = tempo, y = doses)) + geom_density()
plot(tempo, doses)
ggplot(df, aes(x = tempo, y = doses)) + geom_plot() + geom_line()
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line()
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic()
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(x = 7)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7))
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7), col = "blue")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = 3), col = "blue")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "3"), col = "blue")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + lims(x = 10)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + xlim(x = 10)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + xlim(0,10)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + xlim(0,10)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + stat_smooth()
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) +  theme(legend.position = "top")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,1) + labs()
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,1) + labs()
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,1)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,1)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate(text = "Mateus para em 26 doses", aes( y = 10))
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", aes( y = 10))
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", y= 10))
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", y= 10))
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,1) + annotate("text", label = "Mateus para em 26 doses", y = 10)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,1) + annotate("text", label = "Mateus para em 26 doses", y = 10)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,1) + annotate("text", label = "Mateus para em 26 doses", x = 5, y = 10)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", x = 5, y = 10)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", x = 2, y = 10)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", x = 2, y = 10) + annotate("text", label = "Mateusinha", x = 2, y = 5)
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", x = 2, y = 10) + annotate("text", label = "Mateusinha", x = 2, y = 5, col = "red")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", x = 2, y = 10) + annotate("text", label = "Mateusinha", x = 2, y = 5, col = "red") + + annotate("text", label = "Reba", x = 2, y = 5, col = "blue")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", x = 2, y = 10) + annotate("text", label = "Mateusinha", x = 2, y = 5, col = "red") + + annotate("text", label = "Reba", x = 2, y = 7.5, col = "blue")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", x = 2, y = 10) + annotate("text", label = "Mateusinha", x = 2, y = 5, col = "red")  + annotate("text", label = "Reba", x = 2, y = 7.5, col = "blue")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", x = 2, y = 10) + annotate("text", label = "Mateusinha", x = 2, y = 5, col = "red")  + annotate("text", label = "Reba", x = 1.5, y = 7.5, col = "blue")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", x = 2, y = 10) + annotate("text", label = "Mateusinha", x = 2, y = 5, col = "red")  + annotate("text", label = "Reba", x = 1.5, y = 7.5, col = "blue") + labs ( x = "tempo(horas)")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", x = 2, y = 10) + annotate("text", label = "Mateusinha", x = 2, y = 5, col = "red")  + annotate("text", label = "Reba", x = 1.5, y = 7.5, col = "blue") + labs ( x = "tempo(horas)", y = "doses(ml)")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", x = 2, y = 10) + annotate("text", label = "Mateusinha", x = 2, y = 5, col = "red")  + annotate("text", label = "Reba", x = 1.5, y = 7.5, col = "blue") + labs ( x = "Tempo(horas)", y = "Doses(ml)")
ggplot(df, aes(x = tempo, y = doses)) + geom_point() + geom_line() + theme_classic() + geom_hline(aes(yintercept = 7, linetype = "Reba"), col = "blue", linetype = "dashed") + geom_hline(aes(yintercept = 5.6, linetype = "Mateusinha"), col = "red", linetype = "dashed") + ylim(0,10) + annotate("text", label = "Mateus para em 26 doses", x = 2, y = 10) + annotate("text", label = "Mateusinha", x = 2, y = 5, col = "red")  + annotate("text", label = "Reba", x = 1.5, y = 7.5, col = "blue") + labs ( x = "Tempo (horas)", y = "Doses (ml)")
ggsave("drink", dpi = 600)
ggsave("drink.jpeg", dpi = 600)
citation("vegan")
citation("PMCMR")
setwd("~/GitHub/rodriguesgfb2")
install.packages("shiny")
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
stop
blogdown:::insert_image_addin()
setwd("~/GitHub/rodriguesgfb2")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::hugo_version()
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages(c("ape", "backports", "BAT", "BH", "bipartite", "bitops", "brio", "broom", "callr", "caTools", "cli", "cpp11", "crayon", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "deldir", "desc", "diffobj", "dotCall64", "dplyr", "e1071", "ellipsis", "emmeans", "fansi", "farver", "fastmap", "forcats", "ggplot2", "haven", "hdrcde", "highr", "hms", "htmltools", "httpuv", "isoband", "jsonlite", "knitr", "ks", "later", "lifecycle", "lubridate", "mathjaxr", "MatrixModels", "mime", "multcomp", "openssl", "pbkrtest", "pillar", "pixmap", "pkgbuild", "pkgload", "processx", "promises", "ps", "quantreg", "raster", "Rcpp", "RcppArmadillo", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "rvest", "shiny", "SIBER", "SparseM", "spatstat", "spatstat.data", "spatstat.utils", "splancs", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "waldo", "withr", "xfun", "zoo"))
install.packages(c("ape", "backports", "BAT", "BH", "bipartite", "bitops", "brio", "broom", "callr", "caTools", "cli", "cpp11", "crayon", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "deldir", "desc", "diffobj", "dotCall64", "dplyr", "e1071", "ellipsis", "emmeans", "fansi", "farver", "fastmap", "forcats", "ggplot2", "haven", "hdrcde", "highr", "hms", "htmltools", "httpuv", "isoband", "jsonlite", "knitr", "ks", "later", "lifecycle", "lubridate", "mathjaxr", "MatrixModels", "mime", "multcomp", "openssl", "pbkrtest", "pillar", "pixmap", "pkgbuild", "pkgload", "processx", "promises", "ps", "quantreg", "raster", "Rcpp", "RcppArmadillo", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "rvest", "shiny", "SIBER", "SparseM", "spatstat", "spatstat.data", "spatstat.utils", "splancs", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "waldo", "withr", "xfun", "zoo"))
install.packages(c("ape", "backports", "BAT", "BH", "bipartite", "bitops", "brio", "broom", "callr", "caTools", "cli", "cpp11", "crayon", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "deldir", "desc", "diffobj", "dotCall64", "dplyr", "e1071", "ellipsis", "emmeans", "fansi", "farver", "fastmap", "forcats", "ggplot2", "haven", "hdrcde", "highr", "hms", "htmltools", "httpuv", "isoband", "jsonlite", "knitr", "ks", "later", "lifecycle", "lubridate", "mathjaxr", "MatrixModels", "mime", "multcomp", "openssl", "pbkrtest", "pillar", "pixmap", "pkgbuild", "pkgload", "processx", "promises", "ps", "quantreg", "raster", "Rcpp", "RcppArmadillo", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "rvest", "shiny", "SIBER", "SparseM", "spatstat", "spatstat.data", "spatstat.utils", "splancs", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "waldo", "withr", "xfun", "zoo"))
install.packages(c("ape", "backports", "BAT", "BH", "bipartite", "bitops", "brio", "broom", "callr", "caTools", "cli", "cpp11", "crayon", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "deldir", "desc", "diffobj", "dotCall64", "dplyr", "e1071", "ellipsis", "emmeans", "fansi", "farver", "fastmap", "forcats", "ggplot2", "haven", "hdrcde", "highr", "hms", "htmltools", "httpuv", "isoband", "jsonlite", "knitr", "ks", "later", "lifecycle", "lubridate", "mathjaxr", "MatrixModels", "mime", "multcomp", "openssl", "pbkrtest", "pillar", "pixmap", "pkgbuild", "pkgload", "processx", "promises", "ps", "quantreg", "raster", "Rcpp", "RcppArmadillo", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "rvest", "shiny", "SIBER", "SparseM", "spatstat", "spatstat.data", "spatstat.utils", "splancs", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "waldo", "withr", "xfun", "zoo"))
install.packages(c("ape", "backports", "BAT", "BH", "bipartite", "bitops", "brio", "broom", "callr", "caTools", "cli", "cpp11", "crayon", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "deldir", "desc", "diffobj", "dotCall64", "dplyr", "e1071", "ellipsis", "emmeans", "fansi", "farver", "fastmap", "forcats", "ggplot2", "haven", "hdrcde", "highr", "hms", "htmltools", "httpuv", "isoband", "jsonlite", "knitr", "ks", "later", "lifecycle", "lubridate", "mathjaxr", "MatrixModels", "mime", "multcomp", "openssl", "pbkrtest", "pillar", "pixmap", "pkgbuild", "pkgload", "processx", "promises", "ps", "quantreg", "raster", "Rcpp", "RcppArmadillo", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "rvest", "shiny", "SIBER", "SparseM", "spatstat", "spatstat.data", "spatstat.utils", "splancs", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "waldo", "withr", "xfun", "zoo"))
install.packages(c("ape", "backports", "BAT", "BH", "bipartite", "bitops", "brio", "broom", "callr", "caTools", "cli", "cpp11", "crayon", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "deldir", "desc", "diffobj", "dotCall64", "dplyr", "e1071", "ellipsis", "emmeans", "fansi", "farver", "fastmap", "forcats", "ggplot2", "haven", "hdrcde", "highr", "hms", "htmltools", "httpuv", "isoband", "jsonlite", "knitr", "ks", "later", "lifecycle", "lubridate", "mathjaxr", "MatrixModels", "mime", "multcomp", "openssl", "pbkrtest", "pillar", "pixmap", "pkgbuild", "pkgload", "processx", "promises", "ps", "quantreg", "raster", "Rcpp", "RcppArmadillo", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "rvest", "shiny", "SIBER", "SparseM", "spatstat", "spatstat.data", "spatstat.utils", "splancs", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "waldo", "withr", "xfun", "zoo"))
install.packages(c("ape", "backports", "BAT", "BH", "bipartite", "bitops", "brio", "broom", "callr", "caTools", "cli", "cpp11", "crayon", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "deldir", "desc", "diffobj", "dotCall64", "dplyr", "e1071", "ellipsis", "emmeans", "fansi", "farver", "fastmap", "forcats", "ggplot2", "haven", "hdrcde", "highr", "hms", "htmltools", "httpuv", "isoband", "jsonlite", "knitr", "ks", "later", "lifecycle", "lubridate", "mathjaxr", "MatrixModels", "mime", "multcomp", "openssl", "pbkrtest", "pillar", "pixmap", "pkgbuild", "pkgload", "processx", "promises", "ps", "quantreg", "raster", "Rcpp", "RcppArmadillo", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "rvest", "shiny", "SIBER", "SparseM", "spatstat", "spatstat.data", "spatstat.utils", "splancs", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "waldo", "withr", "xfun", "zoo"))
install.packages(c("ape", "backports", "BAT", "BH", "bipartite", "bitops", "brio", "broom", "callr", "caTools", "cli", "cpp11", "crayon", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "deldir", "desc", "diffobj", "dotCall64", "dplyr", "e1071", "ellipsis", "emmeans", "fansi", "farver", "fastmap", "forcats", "ggplot2", "haven", "hdrcde", "highr", "hms", "htmltools", "httpuv", "isoband", "jsonlite", "knitr", "ks", "later", "lifecycle", "lubridate", "mathjaxr", "MatrixModels", "mime", "multcomp", "openssl", "pbkrtest", "pillar", "pixmap", "pkgbuild", "pkgload", "processx", "promises", "ps", "quantreg", "raster", "Rcpp", "RcppArmadillo", "reprex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "rvest", "shiny", "SIBER", "SparseM", "spatstat", "spatstat.data", "spatstat.utils", "splancs", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "utf8", "vctrs", "vegan", "viridis", "viridisLite", "waldo", "withr", "xfun", "zoo"))
require("blogdown")
require(blogdown)
install.packages("blogdown")
require(blogdown)
blogdown::install_hugo()
